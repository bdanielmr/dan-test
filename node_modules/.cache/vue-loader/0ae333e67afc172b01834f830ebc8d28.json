{"remainingRequest":"/Users/angiela/projectos-vue-js/dan-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/angiela/projectos-vue-js/dan-test/src/components/DanNotificationBar.vue?vue&type=style&index=0&id=cdf363f2&scoped=true&lang=css&","dependencies":[{"path":"/Users/angiela/projectos-vue-js/dan-test/src/components/DanNotificationBar.vue","mtime":1606127513840},{"path":"/Users/angiela/projectos-vue-js/dan-test/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angiela/projectos-vue-js/dan-test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/angiela/projectos-vue-js/dan-test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/angiela/projectos-vue-js/dan-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/angiela/projectos-vue-js/dan-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ub3RpZmljYXRpb24tYmFyIHsKICBtYXJnaW46IDFlbSAwIDFlbTsKfQo="},{"version":3,"sources":["DanNotificationBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA","file":"DanNotificationBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <!-- component base from DanNotificationContainer \n      recive a object with notification values and renderer -->\n  <div class=\"notification-bar\" :class=\"notificationTypeClass\">\n    <p>{{ notification.message }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DanNotificationBar\",\n  props: {\n    notification: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      timeout: null\n    };\n  },\n  mounted() {\n    //mounted a time to message notification render in the dom \n    this.timeout = setTimeout(() => this.removeNoti(this.notification), 5000);\n  },\n  beforeDestroy() {\n    //delete message notification after mounted\n    clearTimeout(this.timeout);\n  },\n  computed: {\n    //change styles  \n    notificationTypeClass() {\n      return `-text-${this.notification.type}`;\n    }\n  },\n  methods: {\n    //acction from store vuex to remove notification\n    removeNoti(noti) {\n      this.$store.dispatch(\"notification/remove\", noti);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.notification-bar {\n  margin: 1em 0 1em;\n}\n</style>\n"]}]}
{"remainingRequest":"C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\src\\components\\DanNotificationBar.vue?vue&type=style&index=0&id=cdf363f2&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\src\\components\\DanNotificationBar.vue","mtime":1607528374166},{"path":"C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bryan\\Documents\\GitHub\\gg\\dan-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubm90aWZpY2F0aW9uLWJhciB7DQogIG1hcmdpbjogMWVtIDAgMWVtOw0KfQ0K"},{"version":3,"sources":["DanNotificationBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA","file":"DanNotificationBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <!-- component base from DanNotificationContainer \r\n      recive a object with notification values and renderer -->\r\n  <div class=\"notification-bar\" :class=\"notificationTypeClass\">\r\n    <p>{{ notification.message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"DanNotificationBar\",\r\n  props: {\r\n    notification: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      timeout: null\r\n    };\r\n  },\r\n  mounted() {\r\n    //mounted a time to message notification render in the dom \r\n    this.timeout = setTimeout(() => this.removeNoti(this.notification), 5000);\r\n  },\r\n  beforeDestroy() {\r\n    //delete message notification after mounted\r\n    clearTimeout(this.timeout);\r\n  },\r\n  computed: {\r\n    //change styles  \r\n    notificationTypeClass() {\r\n      return `-text-${this.notification.type}`;\r\n    }\r\n  },\r\n  methods: {\r\n    //acction from store vuex to remove notification\r\n    removeNoti(noti) {\r\n      this.$store.dispatch(\"notification/remove\", noti);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.notification-bar {\r\n  margin: 1em 0 1em;\r\n}\r\n</style>\r\n"]}]}